[
  {
    "name": "Peer",
    "type": "constructor",
    "snippet": "var peer = new Peer([id], [options]);",
    "description": "他のpeerへ接続できるpeerです。また、他のpeerからのコネクションをlistenできます。",
    "children": [
      {
        "name": "id",
        "optional": true,
        "type": "string",
        "description": "他のピアがこのピアへ接続するときに使われるIDです。もしIDが指定されない場合、ブローカサーバがIDを生成します。<span class='warn'>このIDを利用してピアを特定するのは推奨しません。なぜならば、このIDはコネクションをブローカ(仲介)するのにのみ使われるように作成されているためです。特定に他の情報を使う場合は、<a href='#peerconnect-options'><code>metadata</code></a>の利用を推奨します。</span>"
      },
      {
        "name": "options",
        "optional": true,
        "type": "object",
        "children": [
          {
            "name": "key",
            "type": "string",
            "description": "クラウド上のPeerServerを利用するためのAPIキーです。"
          },
          {
            "name": "host",
            "type": "string",
            "description": "サーバのホスト名です。デフォルトは、<code>skyway.io</code>です。相対ホスト名として、'/' も許容します。"
          },
          {
            "name": "port",
            "type": "number",
            "description": "サーバのポート番号です。デフォルトはホストがskyway.ioの場合は<code>443</code>番で、その他の場合は<code>80</code>番です。"
          },
          {
            "name": "path",
            "type": "string",
            "description": "自身のPeerServerが動作している場所のpathです。デフォルトは、<code>'/'</code>です。"
          },
          {
            "name": "secure",
            "type": "boolean",
            "tags": ["beta (0.3.0)"],
            "description": "SSLを利用する場合は、<code>true</code>にします。skyway.ioはSSLを利用するため、デフォルトは、<code>true</code>です。"
          },
          {
            "name": "turn",
            "type": "boolean",
            "tags": ["skyway"],
            "description": "SkyWayが提供するTURNサーバを利用する場合は、<code>true</code>にします。デフォルトは、<code>true</code>です。利用には別途<a href='https://skyway.io/ds/turnrequest' target='_blank'>申請</a>が必要です。"
          },
          {
            "name": "config",
            "type": "object",
            "description": "RTCPeerConnectionへ渡される設定項目のハッシュです。このハッシュは、カスタマイズされたICE/TURNサーバを含みます。デフォルト値は、<code>{ 'iceServers': [{ 'url': 'stun:stun.skyway.io:3478' }] }</code>です。尚、SkyWayが提供するTURNサーバを利用する場合は、<code>iceServers</code>の指定は不要です。"
          },
          {
            "name": "debug",
            "type": "number",
            "tags": ["beta (0.3.0)"],
            "description": "debugレベルにしたがってログを出力します。デフォルト値は<code>0</code>です。",
            "children": [
              {
                "name": 0,
                "description": "ログを出力しません。"
              },
              {
                "name": 1,
                "description": "エラーのみログ出力します。"
              },
              {
                "name": 2,
                "description": "エラーと警告をログ出力します。"
              },
              {
                "name": 3,
                "description": "すべてのログを出力します。"
              }
            ]
          }
        ]
      }
    ]
  },

  {
    "name": "peer.connect",
    "type": "method",
    "snippet": "var <a href='#dataconnection'>dataConnection</a> = peer.connect(id, [options]);",
    "description": "<code>id</code>で指定されたリモートのPeerへ接続し、data connectionを返します。コネクションに失敗した場合に備え、<a href='#peeron-error'><code>error</code></a>イベントを設定してください。",
    "children": [
      {
        "name": "id",
        "type": "string",
        "description": "リモートpeerのブローカーIDです(リモートpeerの<a href='#peerid'><code>peer.id</code></a>です)。"
      },
      {
        "name": "options",
        "optional": true,
        "type": "object",
        "children": [
          {
            "name": "label",
            "type": "string",
            "description": "data connectionを識別するためのユニークなラベルです。もし特定されていない場合は、ランダムに生成されます。<a href='#dataconnection-label'><code>dataConnection.label</code></a>を通じてアクセスできます。"
          },
          {
            "name": "metadata",
            "description": "コネクションに関連付けされるメタデータで、コネクションを開始したpeerに渡されます。<a href='#dataconnection-metadata'><code>dataConnection.metadata</code></a>を通じてアクセスできます。serialize可能です。"
          },
          {
            "name": "serialization",
            "type": "string",
            "description": "<code>binary</code> (default), <code>binary-utf8</code>, <code>json</code>, or <code>none</code> を指定可能です。<a href='#dataconnection-serialization'><code>dataConnection.serialization</code></a>を通じてアクセスできます。<span class='tip'><code>binary-utf8</code>はパフォーマンスの低下を引き起こすことがあります。UTF8文字列がbinaryフォーマットにパックされるためです。</span>"
          },
          {
            "name": "reliable",
            "type": "boolean",
            "description": "data channelに信頼性をもたせるか(例えば、大きなファイルの転送）、もたせないか（例えば、ゲームやストリーミング）を指定可能です。デフォルトはfalseです。true設定は互換性のないブラウザ（Chrome 30とそれ以下)のために、shimを使います。そのため、完全なパフォーマンスを提供できないことがあります。"
          }
        ]
      }
    ]
  },

  {
    "name": "peer.call",
    "tags": ["beta (0.3.0)"],
    "type": "method",
    "snippet": "var <a href='#mediaconnection'>mediaConnection</a> = peer.call(id, stream);",
    "description": "<code>id</code>で指定されたリモートのpeerへ発信し、media connectionを返します。コネクションに失敗した場合に備え、<a href='#peeron-error'><code>error</code></a>イベントを設定してください。",
    "children": [
      {
        "name": "id",
        "type": "string",
        "description": "リモートpeerのブローカーID(リモートpeerの<a href='#peerid'><code>peer.id</code></a>)です。"
      },
      {
        "name": "stream",
        "type": "MediaStream",
        "description": "何らかのストリームです。"
      }
    ]
  },

  {
    "name": "peer.on",
    "type": "method",
    "snippet": "peer.on(event, callback);",
    "description": "peerイベントのリスナを設定します。",
    "children": [
      {
        "name": "'open'",
        "type": "event",
        "snippet": "peer.on('open', function(id) { ... });",
        "description": "PeerServerへの接続が確立すると発生します。このイベントが発生する前にpeerを利用することもできますが、サーバへのメッセージはキューイングされます。<code>id</code>はブローカーIDです（コンストラクタで指定されるか、サーバによって割付けされます）。<span class='tip'>コネクションの速度が重要である場合、他のピアへ接続する前に、このイベントを待つべきではありません。</span> "
      },
      {
        "name": "'connection'",
        "type": "event",
        "snippet": "peer.on('connection', function(<a href='#dataconnection'>dataConnection</a>) { ... });",
        "description": "リモートピアと新しいdata connectionが確立すると発生します。"
      },
      {
        "name": "'call'",
        "type": "event",
        "tags": ["beta (0.3.0)"],
        "snippet": "peer.on('call', function(<a href='#mediaconnection'>mediaConnection</a>) { ... });",
        "description": "リモートのpeerがあなたに発信してきたときに発生します。<code>mediaConnection</code>はこの時点でアクティブではありません。つまり、最初に応答する必要があります（<a href='#mediaconnection-answer'><code>mediaConnection.answer([stream]);</code></a>）。その後、streamイベントをlistenできます。"
      },
      {
        "name": "'close'",
        "type": "event",
        "snippet": "peer.on('close', function() { ... });",
        "description": "ピアとの接続が<a href='#peerdestroy'>destroyed</a>となった場合に発生します。<span class='tip'>peerを確実にクリアするためには、peerが不要となった時点で、peer.destroy()の実行を推奨します。</span>"
      },
      {
        "name": "'error'",
        "type": "event",
        "snippet": "peer.on('error', function(err) { ... });",
        "description": "peerに対するエラーは、ほとんど常に致命的であり、peerを破壊します。ソケットから生じるエラーや、PeerConnectionsから生じるエラーは、このイベントに伝えられます。",
        "children": [
          {
            "name": "'browser-incompatible'",
            "type": "Error",
            "tags": ["fatal"],
            "description": "利用しようとしているwebRTC機能のすべて、またはいくつかについて、クライアントのブラウザがサポートしていません。"
          },
          {
            "name": "'invalid-id'",
            "type": "Error",
            "tags": ["fatal"],
            "description": "Peerコンストラクタへ渡されたIDに、不正な文字が含まれています。"
          },
          {
            "name": "'invalid-key'",
            "type": "Error",
            "tags": ["fatal"],
            "description": "Peerコンストラクタへ渡されたAPI Keyが不正な文字列を含んでいます。または、API Keyが含まれていません（クラウド上のサーバを利用する場合のみ）。"
          },
          {
            "name": "'unavailable-id'",
            "type": "Error",
            "tags": ["fatal"],
            "description": "Peerコンストラクタへ渡されたIDは既に利用されています。"
          },
          {
            "name": "'ssl-unavailable'",
            "type": "Error",
            "tags": ["fatal"],
            "description": "PeerJSはsecureな状態を利用しますが、クラウド上のサーバはSSLをサポートしていません。独自のPeerServerを利用してください。"
          },
          {
            "name": "'server-disconnected'",
            "type": "Error",
            "description": "既にこのPeerとの接続が切断されており、新しいコネクションを作成できません。"
          },
          {
            "name": "'server-error'",
            "type": "Error",
            "tags": ["fatal"],
            "description": "サーバに到達できません。"
          },
          {
            "name": "'socket-error'",
            "type": "Error",
            "tags": ["fatal"],
            "description": "ソケットからのエラーです。"
          },
          {
            "name": "'socket-closed'",
            "type": "Error",
            "tags": ["fatal"],
            "description": "ソケットが予期せずクローズしました。"
          }
        ]
      }
    ]
  },

  {
    "name": "peer.disconnect",
    "type": "method",
    "snippet": "peer.disconnect();",
    "description": "サーバとの接続をクローズします。既存のデータおよびメディア接続はそのままです。<a href='#peerdestroyed'><code>peer.destroyed</code></a>に<code>true</code>が設定されます。<span class='warn'>この操作は必ず実施してください。それぞれのPeerオブジェクトが利用不可能、またはコネクションを受信できません。idも（クラウド上の）サーバに没収されます。</span>"
  },

  {
    "name": "peer.destroy",
    "type": "method",
    "snippet": "peer.destroy();",
    "description": "サーバへの接続をクローズし、すべての既存のコネクションを終了します。<a href='#peerdestroyed'><code>peer.destroyed</code></a>は<code>true</code>に設定されます。<span class='warn'>この操作は必ず実施してください。それぞれのPeerオブジェクトが利用不可能、またはコネクションを受信できません。idも（クラウド上の）サーバに没収されます。さらに、データコネクション・メディアコネクションもクローズされます。</span>"
  },

  {
    "name": "peer.listAllPeers",
    "tags": ["skyway"],
    "type": "method",
    "snippet": "peer.listAllPeers(function(list) { ... });",
    "description": "SkyWayが提供するRestAPIにアクセスし、APIキー毎のアクティブなPeerIDを取得します。listはArray形式で得られます。"
  },

  {
    "name": "peer.id",
    "type": "string",
    "description": "peerのブローカーIDです。もしIDが<a href='#peer'>constructor</a>で指定されない場合、<a href='#peeron-open'><code>open</code></a>が発生するまで、<code>undefined</code>のままです。"
  },

  {
    "name": "peer.connections",
    "type": "object",
    "description": "リモートpeerのIDがkeyとして、peerと関連付けされるコネクションを持つハッシュです。<span class='tip'>このハッシュに頼るよりも、自身でコネクションを追跡管理することを推奨します。</span>"
  },

  {
    "name": "peer.disconnected",
    "type": "boolean",
    "description": "PeerServerとのアクティブなコネクションがある場合は、<code>false</code> です。"
  },

  {
    "name": "peer.destroyed",
    "type": "boolean",
    "description": "このpeerにおける、全接続が利用されていない場合は<code>true</code>です。"
  },

  {
    "name": "DataConnection",
    "type": "class",
    "description": "WebRTCのData Channelをラップします。このオブジェクトを得るためには、<a href='#peerconnect'><code>peer.connect</code></a>を使うか、<a href='#peeron-connect'><code>connect</code></a>イベントをlistenしてください",
    "children": [
      {
        "name": ".send",
        "type": "method",
        "snippet": "dataConnection.send(data);",
        "description": "デフォルトで、<code>data</code> はBinaryPackでシリアライズされて、リモートのピアで送信されます。",
        "children": {
          "name": "data",
          "description": "オブジェクト、strings、blobsなどのどんなデータ形式でも送信可能です。"
        }
      },
      {
        "name": ".close",
        "type": "method",
        "snippet": "dataConnection.close();",
        "description": "DataChannelとPeerConnectionを解放して、コネクションをクローズします。"
      },
      {
        "name": ".on",
        "type": "method",
        "snippet": "dataConnection.on(event, callback);",
        "description": "data connectionイベントのリスナを設定します。",
        "children": [
          {
            "name": "'data'",
            "type": "event",
            "snippet": "dataConnection.on('data', function(data) { ... });",
            "description": "リモートpeerからデータを受信した場合に発生します。"
          },
          {
            "name": "'open'",
            "type": "event",
            "snippet": "dataConnection.on('open', function() { ... });",
            "description": "コネクションが利用可能となった場合に発生します。"
          },
          {
            "name": "'close'",
            "type": "event",
            "snippet": "dataConnection.on('close', function() { ... });",
            "description": "あなたが、またはリモートのpeerがdata connectionをクローズした場合に発生します。<span class='warn'>Firefoxはこのイベントをまだサポートしていません。</span>"
          },
          {
            "name": "'error'",
            "type": "event",
            "snippet": "dataConnection.on('error', function(err) { ... });"
          }
        ]
      },
      {
        "name": ".bufferSize",
        "type": "number",
        "description": "ブラウザのバッファが一杯になった場合に、キューされるメッセージのサイズです。"
      },
      {
        "name": ".dataChannel",
        "type": "object",
        "description": "コネクションに関連付けされたRTCDataChannelオブジェクトへの参照です。"
      },
      {
        "name": ".label",
        "type": "string",
        "description": "コネクションが開始されたときにPeerJSからアサインされる、または指定されるオプションのラベルです。"
      },
      {
        "name": ".metadata",
        "description": "コネクションが開始されたときに、コネクションと関連付けされるメタデータです。"
      },
      {
        "name": ".open",
        "type": "boolean",
        "description": "コネクションがopenであり、読み込み/書き込みの準備ができている場合にtrueになります。"
      },
      {
        "name": ".peerConnection",
        "type": "object",
        "description": "コネクションに関連付けされる、RTCPeerConnectionへの参照です。"
      },
      {
        "name": ".peer",
        "type": "string",
        "description": "コネクションの相手側のpeer IDです。"
      },
      {
        "name": ".reliable",
        "type": "boolean",
        "description": "信頼性のあるdata channelの場合にtrueです。コネクションの開始時に定義されます。"
      },
      {
        "name": ".serialization",
        "type": "string",
        "description": "コネクションを通じて送信されるデータのserializeフォーマットです。<code>binary</code> (デフォルト値)、 <code>binary-utf8</code>、 <code>json</code>、 または <code>none</code> となります。"
      },
      {
        "name": ".type",
        "type": "string",
        "description": "data connectionでは、常に<code>'data'</code>が設定されます。"
      }
    ]
  },

  {
    "name": "MediaConnection",
    "type": "class",
    "tags": ["beta (0.3.0)"],
    "description": "Wraps WebRTC's media streams. To get one, use <a href='#peercall'><code>peer.call</code></a> or listen for the <a href='#peeron-call'><code>call</code></a> event.",
    "description": "WebRTCのmedia streamをラップします。このオブジェクトを得るためには、<a href='#peercall'><code>peer.call</code></a>を使うか、<a href='#peeron-call'><code>call</code></a>イベントをlistenしてください。",
    "children": [
      {
        "name": ".answer",
        "type": "method",
        "snippet": "mediaConnection.answer([stream]);",
        "description": "<a href='#peeron-call'><code>call</code></a>イベントを受信した場合に、応答するためにコールバックにて与えられるmedia connectionにて<code>.answer</code>を呼び出せます。また、オプションで自身のmedia streamを設定できます。",
        "children": {
          "name": "stream",
          "optional": true,
          "type": "MediaStream",
          "description": "<a href='https://developer.mozilla.org/en-US/docs/Web/API/Navigator.getUserMedia'><code>getUserMedia</code></a>から取得できるWebRTCのmedia streamです。"
        }
      },
      {
        "name": ".close",
        "type": "method",
        "snippet": "mediaConnection.close();",
        "description": "media connectionをクローズします。"
      },
      {
        "name": ".on",
        "type": "method",
        "snippet": "mediaConnection.on(event, callback);",
        "description": "media connectionイベントのリスナを設定します。",
        "children": [
          {
            "name": "'stream'",
            "type": "event",
            "snippet": "mediaConnection.on('stream', function(stream) { ... });",
            "description": "リモートのpeerが<code>stream</code>を追加したときに発生します。"
          },
          {
            "name": "'close'",
            "type": "event",
            "snippet": "mediaConnection.on('close', function() { ... });",
            "description": "あなたかリモートのpeerがmedia connectionをクローズした時に発生します。<span class='warn'>Firefoxはこのイベントをまだサポートしていません。</span>"
          },
          {
            "name": "'error'",
            "type": "event",
            "snippet": "mediaConnection.on('error', function(err) { ... });"
          }
        ]
      },
      {
        "name": ".open",
        "type": "boolean",
        "description": "media connectionがアクティブなとき（例えば、呼び出しにたいして、応答があった後）に、trueとなります。もし片方向通話のために、最大待ち時間を設定したい場合に、これをチェックできます。"
      },
      {
        "name": ".metadata",
        "description": "コネクションが開始されたときに、コネクションと関連付けされるメタデータです。"
      },
      {
        "name": ".peer",
        "type": "string",
        "description": "コネクションの相手側のpeer IDです。"
      },
      {
        "name": ".type",
        "type": "string",
        "description": "media connectionでは、常に<code>'media'</code>が設定されます。"
      }
    ]
  },

  {
    "name": "util",
    "type": "object",
    "tags": ["utility"],
    "description": "多数の有用なユーティリティを提供します。<span class='warn'>ここで記載されているutlitiesのみ<code>util</code>で保証されます。ここに記載されないutilitiesは予告なく除去されることがあります。これらを、私達は'大きな変更'とは考えません。</span>",
    "children": [
      {
        "name": ".browser",
        "type": "string",
        "snippet": "if (util.browser === 'Firefox') { /* OK to peer with Firefox peers. */ }",
        "description": "利用中のブラウザを返します。このプロパティは、2つのピアの接続可否を決定する際に有用です。例えば、data connectionsはメジャーなブラウザ間では、まだ相互接続が現時点ではできません。<code>util.browser</code>は現在、'Firefox'、'Chrome'、'Unsupported'、'Supported'(WebRTC互換している不明なブラウザ)の値を持ちます。"
      },
      {
        "name": ".supports",
        "type": "object",
        "snippet": "if (util.supports.data) { /* OK to start a data connection. */ }",
        "description": "利用中のブラウザにて機能がサポートされているか、WebRTCの機能ごとにマップされるハッシュです。<span class='warn'><code>util.supports</code>は、ここで記載されているプロパティのみ保証します。</span>",
        "children": [
          {
            "name": ".audioVideo",
            "type": "boolean",
            "description": "利用中のブラウザが、media streamとPeerConnectionをサポートしている場合にtrueとなります。"
          },
          {
            "name": ".data",
            "type": "boolean",
            "description": "利用中のブラウザが、DataChannelとPeerConnectionをサポートしている場合にtrueとなります。"
          },
          {
            "name": ".binary",
            "type": "boolean",
            "description": "利用中のブラウザが、binary DataChannelをサポートしている場合にtrueとなります。"
          },
          {
            "name": ".reliable",
            "type": "boolean",
            "description": "利用中のブラウザが、信頼性のあるDataChannelをサポートしている場合にtrueとなります。"
          }
        ]
      }
    ]
  }
]
